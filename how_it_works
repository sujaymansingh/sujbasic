The idea is:

10 LET a = 10

This gets parsed, and then compiled down to some python obj:

StatementLet(varname='a', Expression(Term(Factor(FactorWithLiteral, '10'))))

This in turn gets converted to some VM language (for now forth):

VARIABLE a 10 a !

We'd have to have some form of program counter or something.



Hello:
------

We need a LinedInterpreter

lines = {}
lines[10] = compile_to_forth(basic_code)

then something like:
    def run(self):
        pc = lines.keys[0]

        while (are_more_lines(pc)):
            # increment the pc now rather than later
            # this way, if the code needs to modify the pc (perhaps in a goto)
            # we don't override it
            pc = next_line(pc)
            forth_code = lines[pc]
            forth_interp.execute(forth_code)
